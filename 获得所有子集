Given a set of distinct integers, nums, return all possible subsets (the power set).
Note: The solution set must not contain duplicate subsets.
Example:
Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


class Solution {

    /**
     * @param Integer[] $nums
     * @return Integer[][]
     */
    function subsets($nums) {
        $n = count($nums);
        if($n == 0) return [[]];
        sort($nums);
        $dp[1] = [[],[$nums[0]]];
        for($i=2;$i<=$n;$i++){
            $tmpall = [];
            for($j=0;$j<count($dp[$i-1]);$j++){
                $tmp = $dp[$i-1][$j];
                array_push($tmp,$nums[$i-1]);
                array_push($tmpall,$tmp);
            }
            $dp[$i] = array_merge($dp[$i-1],$tmpall);
        }
        return array_unique($dp[$n], SORT_REGULAR);
    }
}
