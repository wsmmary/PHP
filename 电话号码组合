class Solution {

    /**
     * @param String $digits
     * @return String[]
     */
    function letterCombinations($digits) {
    if (empty($digits)) {
        return [];
    }

    // 先创建字典
    $dic = ["0","1","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"];

    // 创建一个用于模拟队列的数组
    $resultList = [''];

    // 循环输入$digits
    for ($i=0; $i < strlen($digits); $i++) {
        // 先获取当前$i对应的输入的字符串
        // 再使用intval 转成整形，用于根据键值对取对应的字符串
        $mappIndex = intval($digits[$i]);

        // 总是判断当前$resultList的第一个元素的字符长度是否等于当前$i
        while (strlen($resultList[0]) == $i) {
            // 将数组$resultList开头的单元移出数组
            $head = array_shift($resultList);
            $str = $dic[$mappIndex];

            for ($j=0; $j < strlen($str); $j++) {
                $resultList[] = $head.$str[$j];
            }

            print_r($resultList);
        }

    }

    return $resultList;
    }
}
